name: Deploy to GitHub Pages

on:
  # Trigger the workflow every time you push to the `main` branch
  # Using a different branch name? Replace `main` with your branchâ€™s name
  push:
    branches: [ main, refactor/dynamic-path ]
  # Allows you to run this workflow manually from the Actions tab on GitHub.
  workflow_dispatch:
  repository_dispatch:
    types: [remote-build-and-deploy]

# Allow this job to clone the repo and create a page deployment
permissions:
  contents: read
  pages: write
  id-token: write
env:
  GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
  GH_USER: ${{ secrets.GH_USER }}
  GH_EMAIL: ${{ secrets.GH_EMAIL }}
  STRAPI_URL: ${{ secrets.STRAPI_URL }}
  STRAPI_API_TOKEN: ${{ secrets.STRAPI_API_TOKEN }}
  ASTRO_BASE_URL: ${{ secrets.ASTRO_BASE_URL }}
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
  CLOUDFLARE_PROJECT_NAME: ${{ secrets.CLOUDFLARE_PROJECT_NAME }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v4
        
      - name: Install, build, and upload your site
        uses: withastro/action@v2
        # with:
          # path: ./docs # The root location of your Astro project inside the repository. (optional)
          # node-version: 20 # The specific version of Node that should be used to build your site. Defaults to 20. (optional)
          # package-manager: pnpm@latest # The Node package manager that should be used to install dependencies and build your site. Automatically detected based on your lockfile. (optional)

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    name: Deploy to Cloudflare Pages
    steps:
      - name: Deploy to Cloudflare Pages
        uses: andykenward/github-actions-cloudflare-pages@v2.3.0
        with:
          cloudflare-api-token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          cloudflare-account-id: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          cloudflare-project-name: ${{ secrets.CLOUDFLARE_PROJECT_NAME }}
          directory: dist
          github-token: ${{ secrets.GH_ACCESS_TOKEN }}
    # needs: build
    # runs-on: ubuntu-latest
    # environment:
    #   name: github-pages
    #   url: ${{ steps.deployment.outputs.page_url }}
    # steps:
    #   - name: Deploy to GitHub Pages
    #     id: deployment
    #     uses: actions/deploy-pages@v4