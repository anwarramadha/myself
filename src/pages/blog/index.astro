---
import PageLayout from "@layouts/PageLayout.astro"
import TopLayout from "@layouts/TopLayout.astro"
import BottomLayout from "@layouts/BottomLayout.astro"
import Blog from "@components/Blog"
import fetchApi from "@lib/strapi"
import type Post from "@interfaces/post"
import type Tag from "@interfaces/tag"
import type Stack from "@interfaces/stack"
import { BLOG } from "@consts"

const posts = await fetchApi<Post[]>({
  endpoint: `/posts?populate=deep`
})

type Tags = [{
  id: number,
  attributes: Tag
}]
const tags = await fetchApi<Tags>({
  endpoint: `/tags`
})

type Stacks = [{
  id: number,
  attributes: Stack
}]

const stacks = await fetchApi<Stacks>({
  endpoint: `/stacks`
})

const tagStringArray = tags.map(tag => tag.attributes.text)
tagStringArray.push(...stacks.map(stack => stack.attributes.name))
---

<PageLayout title={BLOG.TITLE} description={BLOG.DESCRIPTION}>
  <TopLayout>
    <div class="animate page-heading">
      {BLOG.TITLE}
    </div>
  </TopLayout>
  <BottomLayout>
    <div class="animate">
      <Blog client:load tags={tagStringArray} data={posts} />
    </div>
  </BottomLayout>
</PageLayout>


