---
import PageLayout from "@layouts/PageLayout.astro"
import TopLayout from "@layouts/TopLayout.astro"
import BottomLayout from "@layouts/BottomLayout.astro"
import ArticleTopLayout from "@layouts/ArticleTopLayout.astro"
import ArticleBottomLayout from "@layouts/ArticleBottomLayout.astro"
import fetchApi from "@lib/strapi"
import type Project from "@interfaces/project"
import { generatePrevAndNextPost } from "@lib/post"
import { Md } from "@lib/md"
import { download } from "@lib/utils"

// Create the static projects pages
export async function getStaticPaths() {
  const projects = await fetchApi<Project[]>({
    endpoint: `/projects?populate=deep`
  })
  
  projects.forEach(async (project) => {
    await download(project.attributes.article.heroImage.data?.attributes?.url)
  })

  return projects.map((project) => {
    const md = new Md(project.attributes.article.content)
    md.downloadUrlAndReplaceUrls()
    // download hero image
    // await download(project.attributes.article.heroImage.data.attributes.url)
    project.attributes.article.content = md.text
    return {
      params: { slug: project.attributes.slug },
      props: {
        project,
        ...generatePrevAndNextPost(projects, project.attributes.slug)
      },
    }
	})
}

// Get the requested project
const { project, next, prev } = Astro.props
const { title } = project.attributes
const { summary, heroImage } = project.attributes.article
const collection = "projects"
---

<PageLayout title={title} description={summary} image={heroImage.data?.attributes?.url}>
  <TopLayout>
    <div class="animate">
      <ArticleTopLayout entry={project} collection={collection} />
    </div>
  </TopLayout>
  <BottomLayout>
    <div class="animate">
      <ArticleBottomLayout entry={project} collection={collection} next={next} prev={prev} />
    </div>
  </BottomLayout>
</PageLayout>